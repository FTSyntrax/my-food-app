{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","toFixed","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","process","REACT_APP_ID","REACT_APP_KEY","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAoBeA,EAlBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKN,IACL,6BACGG,EAAYI,KAAI,SAACC,GAAD,OACf,6BAAKA,EAAWC,YAIpB,8BACE,iFADF,IAC6BR,EAASS,QAAQ,GAD9C,WAGA,qBAAKN,UAAWC,IAAMH,MAAOS,IAAKT,EAAOU,IAAI,SC8CpCC,G,MAzDH,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAETC,EAFS,KAEAC,EAFA,OAGYF,mBAAS,IAHrB,mBAGTG,EAHS,KAGDC,EAHC,OAIUJ,mBAAS,WAJnB,mBAITK,EAJS,KAIFC,EAJE,KAMhBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBACyBM,+IAAYC,aADrC,oBAC6DD,+IAAYE,gBAFpF,cACXC,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBd,EAAWc,EAAKC,MALC,2CAAH,qDAkBhB,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,uBAAMA,UAAU,cAAc4B,SAThB,SAACC,GACjBA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAMR,UACE,uBACEd,UAAU,aACV+B,KAAK,OACLC,MAAOnB,EACPoB,SAlBa,SAACJ,GACpBf,EAAUe,EAAEK,OAAOF,UAmBf,wBAAQhC,UAAU,gBAAgB+B,KAAK,SAAvC,uBAIF,qBAAK/B,UAAU,UAAf,SACGW,EAAQR,KAAI,SAACD,GAAD,OACX,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAOiC,MACrBtC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOiC,iBCrChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.d69e23e2.chunk.js","sourcesContent":["import style from './recipe.module.css';\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <h1>{title}</h1>\r\n      <ol>\r\n        {ingredients.map((ingredient) => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ol>\r\n\r\n      <p>\r\n        <strong>Калории:</strong> {calories.toFixed(2)} kcal\r\n      </p>\r\n      <img className={style.image} src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\n\nconst App = () => {\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Find your Recipe</h1>\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__oxsQd\",\"image\":\"recipe_image__1LiUm\"};"],"sourceRoot":""}